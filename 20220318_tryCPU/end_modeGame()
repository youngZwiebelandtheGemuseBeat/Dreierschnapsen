    // --------------------------------------------------------------------------------
    if (i > 3) // exit condition: 20 or 40 shown only - enough & exit
    {
      printf("points caller: %d\n", points_call);
      printf("points opponents: %d\n", points_opponents);
      break;
    }
    // --------------------------------------------------------------------------------
    
    i = 0;
    
    next_and_points = next(initial_order, player,
                           hands[player[i] MINUS_ONE][position[i]],
                           (hands)[player[i + 1] MINUS_ONE][position[i + 1]],
                           (hands)[player[i + 2] MINUS_ONE][position[i + 2]]);
    
    // reset (points) for next round
    // points[0] = 0;
    // points[1] = 0;
    // points[2] = 0;
    pairs = resetPairs(position_Q);
    resetHandlePairs(handle_pairs);
    points_pair = 0;
    next_and_points.points_ = 0;
    next_and_points.winner_ = 0;
    next_and_points.caller_ = 0;
    // bool_trumped_already = FALSE;
    
    if (points_call >= 66)
    {
//      points_and_caller = {};
      break;
    }
    
    else if (points_opponents >= 66)
    {
//      points_and_caller = {};
      break;
    }
    
  /// FOLGENDES SOLLTE JEDOCH SCHON IN EINER EXTERNEN FUNKTION HANDLED WERDEN
  
  // TODO: letzter Stuch bringt nix .. Call < 66 = TOT
  
  points_and_caller.caller_ = TURN_PLAYER_1;
  
  if (points_call < 66)
  {
    if (points_call == 0)
    {
      printf("Opponents win 3 points!\n");
      printf("---------------------------------------------------------------\n");
      points_and_caller.points_ = 3;
      // points_and_caller.caller_ = IRGENDWER;
      points_and_caller.winner_ = OPPONENTS_WIN;
      return points_and_caller;
    }
    
    else if (points_call < 33)
    {
      printf("Opponents win 2 points!\n");
      printf("---------------------------------------------------------------\n");
      points_and_caller.points_ = 2;
      // points_and_caller.caller_ = IRGENDWER;
      points_and_caller.winner_ = OPPONENTS_WIN;
      return points_and_caller;
    }
    
    else /*if (points_call > 33)*/
    {
      printf("Opponents win 1 points!\n");
      printf("---------------------------------------------------------------\n");
      points_and_caller.points_ = 1;
      // points_and_caller.caller_ = IRGENDWER;
      points_and_caller.winner_ = OPPONENTS_WIN;
      return points_and_caller;
    }
  }
  
  else /* caller wins (modeGame() = player 1) */
  {
    if (points_opponents == 0)
    {
      printf("Player %d wins 3 points!\n", buffer_start);
      printf("---------------------------------------------------------------\n");
      points_and_caller.points_ = 3;
      points_and_caller.winner_ = TURN_PLAYER_1 /*buffer_start*/;
      return points_and_caller;
    }
    
    else if (points_opponents < 33)
    {
      printf("Player %d wins 2 points!\n", buffer_start);
      printf("---------------------------------------------------------------\n");
      points_and_caller.points_ = 2;
      points_and_caller.winner_ = TURN_PLAYER_1;
      return points_and_caller;
    }
    
    else /*if (points_opponent > 33)*/
    {
      printf("Player %d wins 1 points!\n", buffer_start);
      printf("---------------------------------------------------------------\n");
      points_and_caller.points_ = 1;
      points_and_caller.winner_ = TURN_PLAYER_1;
      return points_and_caller;
    }
  }
